//============ Copyright © 2019 Brett Anthony. All rights reserved. ============
///
/// This work is licensed under the terms of the MIT license.
/// For a copy, see <https://opensource.org/licenses/MIT>.
//==============================================================================
/// @file error.h
/// @brief provides error/status codes that the library can return.
//==============================================================================

#ifndef XVTF_ERROR_H__
#define XVTF_ERROR_H__

#include "xVTF/types.h"

namespace xvtf
{
	//----------------------------------------------------------------------------------------------------
	/// @enum ERRORCODE
	/// @brief contains all error codes that can be generated by the library.
	//----------------------------------------------------------------------------------------------------
	enum class ERRORCODE : uchar
	{
		UNKNOWN						= 0xFF, /*!< An unknown error. */
		NONE						= 0x00, /*!< No error occured */

		/* General errors */
		REQUIRED_PARAMETER_NULL		= 0x10, /*!< A required parameter was null. */
		SYSTEM_FILE_ERROR			= 0x20, /*!< An error occured trying to retrieve the file descriptor. */

		/* Image related errors */
		REQUESTED_IMAGE_DNE			= 0x10, /*!< The requested image does not exist for the given file. */
		REQUESTED_RESOURCE_DNE		= 0x11, /*!< The requested resource does not exist for the given file. */
		NOT_A_VTF_FILE				= 0x12, /*!< Supplied file is not a VTF file. */
		UNSUPPORTED_FILE_VERSION	= 0x13, /*!< Supplied file is not supported by the library. */
		HEADER_SIZE_TOO_LARGE		= 0x14, /*!< The files given headersize is larger than the max possible size (usually this means data-corruption). */
		MISSING_IMAGE_DATA_MARKER	= 0x15, /*!< Could not determine image starting location from header. */

		/* Arithemetic Errors */
		NUMBER_WAS_INF				= 0x20, /*!< The supplied value was +/- infinity */
		NUMBER_WAS_NAN				= 0x21, /*!< The supplied value was NaN (not a number). */
		NUMBER_WAS_CLAMPED			= 0x22  /*!< The supplied value was too large and was thus clamped. */
	};
}

#endif // !XVTF_ERROR_H__
